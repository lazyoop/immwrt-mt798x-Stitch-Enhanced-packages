commit 98f9549fa466e3b73a04f17dbc05fd88427c72f4
Author: Willy Tarreau <w@1wt.eu>
Date:   Mon Jan 14 15:17:46 2019 +0100

    BUG/MINOR: backend: don't use url_param_name as a hint for BE_LB_ALGO_PH
    
    At a few places in the code we used to rely on this variable to guess
    what LB algo was in place. This is wrong because if the defaults section
    presets "balance url_param foo" and a backend uses "balance roundrobin",
    these locations will still see this url_param_name set and consider it.
    The harm is limited, as this only causes the beginning of the request
    body to be buffered. And in general this is a bad practice which prevents
    us from cleaning the lbprm stuff. Let's explicitly check the LB algo
    instead.
    
    This may be backported to all currently maintained versions.
    
    (cherry picked from commit 089eaa0ba73913187e93d52c3ea34faa01fd8f9c)
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    (cherry picked from commit 70d1744bb41daab4110071e4855504b6dc47bda9)
    [wla: no htx in 1.8]
    Signed-off-by: William Lallemand <wlallemand@haproxy.org>

diff --git a/src/proto_http.c b/src/proto_http.c
index 29a1083a..5dc562ff 100644
--- a/src/proto_http.c
+++ b/src/proto_http.c
@@ -3935,7 +3935,8 @@ int http_process_request(struct stream *s, struct channel *req, int an_bit)
 	 * that parameter. This will be done in another analyser.
 	 */
 	if (!(s->flags & (SF_ASSIGNED|SF_DIRECT)) &&
-	    s->txn->meth == HTTP_METH_POST && s->be->url_param_name != NULL &&
+	    s->txn->meth == HTTP_METH_POST &&
+	    (s->be->lbprm.algo & BE_LB_ALGO) == BE_LB_ALGO_PH &&
 	    (msg->flags & (HTTP_MSGF_CNT_LEN|HTTP_MSGF_TE_CHNK))) {
 		channel_dont_connect(req);
 		req->analysers |= AN_REQ_HTTP_BODY;
